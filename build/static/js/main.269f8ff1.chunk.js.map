{"version":3,"sources":["services/persons.js","components/Filter.js","components/PersonForm.js","components/Persons.js","App.js","index.js"],"names":["baseUrl","personService","getAll","axios","get","then","res","data","create","newObj","post","remove","id","delete","update","put","Filter","props","tip","displayFilter","filterStr","onChange","value","PersonForm","persons","addPersonHandler","updatePersonHandler","useState","newName","setNewName","newNumber","setNewNumber","event","target","type","onClick","preventDefault","found","find","person","name","window","confirm","newPerson","number","maxId","reduce","max","Number","MIN_SAFE_INTEGER","Persons","filteredPersons","removePerson","map","Notification","message","className","App","setPersons","SetFilterStr","setFilteredPersons","errMessage","setErrMessage","useEffect","initialPersons","length","newFilteredPersons","filter","toLowerCase","includes","returnedPerson","concat","setTimeout","catch","err","console","log","result","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.269f8ff1.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst baseUrl = '/api/persons';\n\nconst getAll = () => {\n    const req = axios.get(baseUrl);\n    return req.then(res => res.data);\n}\n\nconst create = (newObj) => {\n    const req = axios.post(baseUrl, newObj);\n    return req.then(res => res.data);\n}\n\nconst remove = (id) => {\n    const req = axios.delete(`${baseUrl}/${id}`);\n    return req.then(res => res.data);\n}\n\nconst update = (id, newObj) => {\n    const req = axios.put(`${baseUrl}/${id}`, newObj);\n    return req.then(res => res.data);\n}\n\nconst personService = {getAll, create, remove, update};\n\nexport default personService;","const Filter = (props) => {\n  const { tip, displayFilter, filterStr } = props;\n\n  return (\n    <div>\n      {tip}\n      <input onChange={displayFilter} value={filterStr} />\n    </div>\n  );\n};\n\nexport default Filter;\n","import React, { useState } from \"react\";\n\nconst PersonForm = (props) => {\n  const { persons, addPersonHandler, updatePersonHandler } = props;\n  const [newName, setNewName] = useState(\"\");\n  const [newNumber, setNewNumber] = useState(\"\");\n\n  const addPerson = (event) => {\n    event.preventDefault();\n    const found = persons.find((person) => person.name === newName);\n\n    if (found) {\n      if (\n        window.confirm(\n          `${found.name} is already added to phonebook, replace the old nunber with a new one?`\n        )\n      ) {\n        const newPerson = { ...found, number: newNumber };\n        setNewName(\"\");\n        setNewNumber(\"\");\n        updatePersonHandler(newPerson);\n      }\n    } else {\n      let maxIdOfPerson = persons.reduce(\n        (max, person) => {\n          return person.id > max.id ? person : max;\n        },\n        { id: Number.MIN_SAFE_INTEGER }\n      );\n      const maxId = maxIdOfPerson.id;\n      const newPerson = { name: newName, number: newNumber, id: maxId + 1 };\n      setNewName(\"\");\n      setNewNumber(\"\");\n      addPersonHandler(newPerson);\n    }\n  };\n\n  return (\n    <div>\n      <form>\n        <div>\n          name:{\" \"}\n          <input\n            value={newName}\n            onChange={(event) => setNewName(event.target.value)}\n          />\n        </div>\n        <div>\n          number:{\" \"}\n          <input\n            value={newNumber}\n            onChange={(event) => setNewNumber(event.target.value)}\n          />\n        </div>\n        <div>\n          <button type=\"submit\" onClick={addPerson}>\n            add\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default PersonForm;\n","const Persons = (props) => {\n  const { filteredPersons, removePerson } = props;\n  return (\n    <ul>\n      {filteredPersons.map((person) => {\n        return (\n          <li key={person.id}>\n            {person.name}\n            {\"  \"}\n            {person.number}\n            {\"  \"}\n            <button onClick={() => removePerson(person.id)}>delete</button>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nexport default Persons;\n","import React, { useState, useEffect } from \"react\";\nimport personService from \"./services/persons\";\nimport Filter from \"./components/Filter\";\nimport PersonForm from \"./components/PersonForm\";\nimport Persons from \"./components/Persons\";\nimport \"./App.css\";\n\nconst Notification = ({ message }) => {\n  if (message === null) {\n    return null;\n  }\n\n  return <div className=\"error\">{message}</div>;\n};\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [filterStr, SetFilterStr] = useState(\"\");\n  const [filteredPersons, setFilteredPersons] = useState([]);\n  const [errMessage, setErrMessage] = useState(null);\n\n  useEffect(() => {\n    personService.getAll().then((initialPersons) => {\n      setPersons(initialPersons);\n      setFilteredPersons(initialPersons);\n    });\n  }, []);\n\n  const addPersonHandler = (newPerson) => {\n    personService\n      .create(newPerson)\n      .then((returnedPerson) => {\n        SetFilterStr(\"\");\n        setFilteredPersons(persons.concat(returnedPerson));\n        setPersons(persons.concat(returnedPerson));\n        setErrMessage(`Added ${returnedPerson.name}`);\n        setTimeout(() => {\n          setErrMessage(null);\n        }, 5000);\n      })\n      .catch((err) => {\n        console.log(\"errors:\", err);\n      });\n  };\n\n  const updatePersonHandler = (newPerson) => {\n    personService\n      .update(newPerson.id, newPerson)\n      .then((returnedPerson) => {\n        SetFilterStr(\"\");\n        setFilteredPersons(\n          persons.map((person) =>\n            person.id !== newPerson.id ? person : returnedPerson\n          )\n        );\n        setPersons(\n          persons.map((person) =>\n            person.id !== newPerson.id ? person : returnedPerson\n          )\n        );\n        setErrMessage(`Updated ${returnedPerson.name}`);\n        setTimeout(() => {\n          setErrMessage(null);\n        }, 5000);\n      })\n      .catch((err) => {\n        console.log(\"errors:\", err);\n      });\n  };\n\n  const displayFilter = (event) => {\n    SetFilterStr(event.target.value);\n    if (event.target.value.length < 2) {\n      setFilteredPersons(persons);\n    } else {\n      const newFilteredPersons = filteredPersons.filter((person) =>\n        person.name.toLowerCase().includes(filterStr.toLowerCase())\n      );\n      setFilteredPersons(newFilteredPersons);\n    }\n  };\n\n  const removePersonOf = (id) => {\n    const person = persons.find((person) => person.id === id);\n    if (window.confirm(`Do you really want to delete ${person.name}?`)) {\n      personService\n        .remove(id)\n        .then((result) => {\n          console.log(result);\n          setFilteredPersons(\n            filteredPersons.filter((person) => person.id !== id)\n          );\n          setPersons(persons.filter((person) => person.id !== id));\n          setErrMessage(`${person.name} has been deleted`);\n          setTimeout(() => {\n            setErrMessage(null);\n          }, 5000);\n        })\n        .catch((err) => {\n          setErrMessage(\n            `Information of ${person.name} has already been removde from server. Please refresh the page.`\n          );\n          setTimeout(() => {\n            setErrMessage(null);\n          }, 5000);\n        });\n    }\n  };\n\n  return (\n    <div>\n      <Notification message={errMessage} />\n      <h2>Phonebook</h2>\n      <Filter\n        tip=\"filter shown with\"\n        displayFilter={displayFilter}\n        filterStr={filterStr}\n      />\n      <h2>add a new</h2>\n      <PersonForm\n        persons={persons}\n        addPersonHandler={addPersonHandler}\n        updatePersonHandler={updatePersonHandler}\n      />\n      <h2>Numbers</h2>\n      <Persons\n        filteredPersons={filteredPersons}\n        removePerson={removePersonOf}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}